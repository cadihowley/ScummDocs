{"remainingRequest":"/home/pi/ScummDocs/node_modules/babel-loader/lib/index.js??ref--8-1!/home/pi/ScummDocs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/home/pi/ScummDocs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/home/pi/ScummDocs/docs/advanced/command_line.md","dependencies":[{"path":"/home/pi/ScummDocs/docs/advanced/command_line.md","mtime":1591248809474},{"path":"/home/pi/ScummDocs/.docusaurus/docusaurus-plugin-content-docs/site-docs-advanced-command-line-md-bb9.json","mtime":1591180439481},{"path":"/home/pi/ScummDocs/node_modules/cache-loader/dist/cjs.js","mtime":1590024424537},{"path":"/home/pi/ScummDocs/node_modules/babel-loader/lib/index.js","mtime":1590024424411},{"path":"/home/pi/ScummDocs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1590024555727},{"path":"/home/pi/ScummDocs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1590024553437}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/pi/ScummDocs/docs/advanced/command_line.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"yFACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,EAAE,CAAE,cADwB,CAE5BC,KAAK,CAAE,sBAFqB,CAG5BC,aAAa,CAAE,sBAHa,CAApB,CAKT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,uBADgB,CAEtB,QAAS,sBAFa,CAGtB,cAAe,iFAHO,CAItB,SAAU,qCAJY,CAKtB,YAAa,wBALS,CAMtB,UAAW,4DANW,CAOtB,gBAAiB,sBAPK,CAQtB,UAAW,aARW,CAStB,WAAY,CACV,QAAS,iBADC,CAEV,YAAa,kBAFH,CATU,CAatB,OAAQ,CACN,QAAS,oBADH,CAEN,YAAa,yBAFP,CAbc,CAAjB,CAkBL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CAAC,CACvBC,KAAK,CAAE,MADgB,CAEvBL,EAAE,CAAE,MAFmB,CAGvBM,QAAQ,CAAE,EAHa,CAAD,CAIrB,CACDD,KAAK,CAAE,SADN,CAEDL,EAAE,CAAE,SAFH,CAGDM,QAAQ,CAAE,EAHT,CAJqB,CAAjB,CASP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBT,QADkB,CAApB,CAGA,KAAMU,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,iFAAL,CAFK,CAGL,aAAK,SAAL,CAHK,CAIL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;CAAjC,CAAL,CAJK,CAML,SAAQ,CACN,KAAM,MADA,CAAR,CAEK,QAFL,CANK,CASL,aAAK;uBAAL,CATK,CAWL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,uBAAtB,CAA6C,kBAAG,UAAU,CAAC,IAAd,EAAuB,CAChE,OAAQ,iBADwD,CAAvB,EAEtC,QAFsC,CAA7C,CADF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAsB,yDAAtB,CAA+E,kBAAY,UAAU,CAAC,IAAvB,EAA8B,eAA9B,CAA/E,CAJF,CAKE,UAAI,UAAU,CAAC,IAAf,EAAsB,uEAAtB,CAA6F,kBAAY,UAAU,CAAC,IAAvB,EAA8B,kBAA9B,CAA7F,CALF,CAXK,CAkBL,SAAQ,CACN,KAAM,SADA,CAAR,CAEK,WAFL,CAlBK,CAqBL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAjC,CAAL,CArBK,CAuGL,aAAK,mJAAL,CAAwJ,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CAAxJ,CAAuN,qHAAvN,CAvGK,CAwGL,aAAG,cAAQ,UAAU,CAAC,GAAnB,EAAuB,cAAQ,UAAU,CAAC,QAAnB,EAA8B,UAA9B,CAAvB,CAAH,CAxGK,CAyGL,aAAG,cAAQ,UAAU,CAAC,GAAnB,EAAyB,UAAzB,CAAH,CAzGK,CA0GL,aAAK,wDAAL,CA1GK,CA2GL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;CAAjC,CAAL,CA3GK,CA6GL,aAAK,wEAAL,CA7GK,CA8GL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;CAAjC,CAAL,CA9GK,CAgHL,aAAG,cAAQ,UAAU,CAAC,GAAnB,EAAyB,OAAzB,CAAH,CAhHK,CAiHL,aAAK,uDAAL,CAjHK,CAkHL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;CAAjC,CAAL,CAlHK,CAoHL,aAAK,wEAAL,CApHK,CAqHL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;CAAjC,CAAL,CArHK,CAAP,CAwHD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'command_line',\n\ttitle: 'Command Line Options',\n\tsidebar_label: 'Command Line Options'\n};\nexport const metadata = {\n  \"id\": \"advanced/command_line\",\n  \"title\": \"Command Line Options\",\n  \"description\": \"Games can be launched directly from the command line, with a number of options.\",\n  \"source\": \"@site/docs/advanced/command_line.md\",\n  \"permalink\": \"/advanced/command_line\",\n  \"editUrl\": \"https://github.com/ScummDocs/docs/advanced/command_line.md\",\n  \"sidebar_label\": \"Command Line Options\",\n  \"sidebar\": \"someSidebar\",\n  \"previous\": {\n    \"title\": \"LucasArts Games\",\n    \"permalink\": \"/games/lucasarts\"\n  },\n  \"next\": {\n    \"title\": \"Configuration File\",\n    \"permalink\": \"/advanced/configuration\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'GAME',\n  id: 'game',\n  children: []\n}, {\n  value: 'OPTIONS',\n  id: 'options',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Games can be launched directly from the command line, with a number of options.`}</p>\n    <p>{`Usage: `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`scummvm [OPTIONS]... [GAME]\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"game\"\n    }}>{`[GAME]`}</h3>\n    <p>{`Short name of game to load. For example, 'monkey' for Monkey Island.\nThe short name can be:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The default built-in `}<a parentName=\"li\" {...{\n          \"href\": \"supported_games\"\n        }}>{`gameid`}</a></li>\n      <li parentName=\"ul\">{`A user configured target set in the configuration file `}<inlineCode parentName=\"li\">{`gameid=monkey`}</inlineCode></li>\n      <li parentName=\"ul\">{`A user configured target set in the Game Settings from the Launcher. `}<inlineCode parentName=\"li\">{`Edit Game --> ID`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"options\"\n    }}>{`[OPTIONS]`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`-v, --version            Display ScummVM version information and exit\n-h, --help               Display a brief help text and exit\n-z, --list-games         Display list of supported games and exit\n-t, --list-targets       Display list of configured targets and exit\n--list-saves             Display a list of saved games for the target specified\n                          with --game=TARGET, or all targets if none is specified\n-a, --add                Add all games from current or specified directory.\n                          If --game=ID is passed only the game with id ID is\n                          added. See also --detect.\n                          Use --path=PATH to specify a directory.\n--detect                 Display a list of games with their ID from current or\n                          specified directory without adding it to the config.\n                          Use --path=PATH to specify a directory.\n--game=ID                In combination with --add or --detect only adds or attempts to\n                          detect the game with id ID.\n--auto-detect            Display a list of games from current or specified directory\n                          and start the first one. Use --path=PATH to specify\n                          a directory.\n--recursive              In combination with --add or --detect recurse down all\n                          subdirectories\n--console                Enable the console window (default: enabled) (Windows only)\n\n-c, --config=CONFIG      Use alternate configuration file\n-p, --path=PATH          Path to where the game is installed\n-x, --save-slot[=NUM]    Saved game slot to load (default: autosave)\n-f, --fullscreen         Force full-screen mode\n-F, --no-fullscreen      Force windowed mode\n-g, --gfx-mode=MODE      Select graphics scaler (see also section 5.3)\n--stretch-mode=MODE      Select stretch mode (center, integral, fit, stretch)\n--filtering              Force filtered graphics mode\n--no-filtering           Force unfiltered graphics mode\n\n\n--gui-theme=THEME        Select GUI theme (default, modern, classic)\n--themepath=PATH         Path to where GUI themes are stored\n--list-themes            Display list of all usable GUI themes\n-e, --music-driver=MODE  Select music driver (see also section 7.0)\n--list-audio-devices     List all available audio devices\n<a name=\"language\"></a>-q, --language=LANG      Select game's language \n-m, --music-volume=NUM   Set the music volume, 0-255 (default: 192)\n-s, --sfx-volume=NUM     Set the sfx volume, 0-255 (default: 192)\n-r, --speech-volume=NUM  Set the voice volume, 0-255 (default: 192)\n--midi-gain=NUM          Set the gain for MIDI playback, 0-1000 (default: 100)\n                          (only supported by some MIDI drivers)\n-n, --subtitles          Enable subtitles (use with games that have voice)\n-b, --boot-param=NUM     Pass number to the boot script (boot param)\n-d, --debuglevel=NUM     Set debug verbosity level\n--debugflags=FLAGS       Enable engine specific debug flags\n                          (separated by commas)\n-u, --dump-scripts       Enable script dumping if a directory called 'dumps'\n                          exists in the current directory\n\n--cdrom=NUM              CD drive to play CD audio from (default: 0 = first\n                          drive)\n--joystick[=NUM]         Enable joystick input (default: 0 = first joystick)\n--platform=WORD          Specify platform of game (allowed values: 2gs, 3do,\n                          acorn, amiga, atari, c64, fmtowns, mac, nes, pc,\n                          pce, segacd, windows)\n--savepath=PATH          Path to where saved games are stored\n--extrapath=PATH         Extra path to additional game data\n--soundfont=FILE         Select the SoundFont for MIDI playback (Only\n                          supported by some MIDI drivers)\n--multi-midi             Enable combination of AdLib and native MIDI\n--native-mt32            True Roland MT-32 (disable GM emulation)\n--enable-gs              Enable Roland GS mode for MIDI playback\n--output-rate=RATE       Select output sample rate in Hz (e.g. 22050)\n--opl-driver=DRIVER      Select AdLib (OPL) emulator (db, mame, nuked)\n--aspect-ratio           Enable aspect ratio correction\n--render-mode=MODE       Enable additional render modes (hercGreen, hercAmber,\n                          cga, ega, vga, amiga, fmtowns, pc9821, pc9801, 2gs,\n                          atari, macintosh)\n\n--alt-intro              Use alternative intro for CD versions of Beneath a\n                          Steel Sky and Flight of the Amazon Queen\n--copy-protection        Enable copy protection in games, when\n                          ScummVM disables it by default.\n--talkspeed=NUM          Set talk delay for SCUMM games, or talk speed for\n                          other games (default: 60)\n--demo-mode              Start demo mode of Maniac Mansion (Classic version)\n--tempo=NUM              Set music tempo (in percent, 50-200) for SCUMM games\n                          (default: 100)\n`}</code></pre>\n    <p>{`The meaning of most long options (that is, those options starting with a double-dash) can be inverted by prefixing them with \"no-\". For example, `}<inlineCode parentName=\"p\">{`--no-aspect-ratio`}</inlineCode>{` will turn aspect ratio correction off. This is useful if you want to override a setting in the configuration file.`}</p>\n    <p><strong parentName=\"p\"><strong parentName=\"strong\">{`Examples`}</strong></strong></p>\n    <p><strong parentName=\"p\">{`Windows:`}</strong></p>\n    <p>{` Running Monkey Island, fullscreen, from a hard disk: `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`C:\\\\Games\\\\LucasArts\\\\scummvm.exe -f -pC:\\\\Games\\\\LucasArts\\\\monkey\\\\monkey \n`}</code></pre>\n    <p>{`Running Full Throttle from CD, fullscreen and with subtitles enabled: `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`C:\\\\Games\\\\LucasArts\\\\scummvm.exe -f -n -pD:\\\\resource\\\\ft\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unix:`}</strong></p>\n    <p>{` Running Monkey Island, fullscreen, from a hard disk:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` /path/to/scummvm -f -p/games/LucasArts/monkey/ monkey \n`}</code></pre>\n    <p>{`Running Full Throttle from CD, fullscreen and with subtitles enabled: `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/path/to/scummvm -f -n -p/cdrom/resource/ft\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}