{"remainingRequest":"/home/ubuntu/ScummDocs/node_modules/babel-loader/lib/index.js??ref--4-1!/home/ubuntu/ScummDocs/node_modules/@docusaurus/theme-classic/src/theme/DocSidebar/index.js","dependencies":[{"path":"/home/ubuntu/ScummDocs/node_modules/@docusaurus/theme-classic/src/theme/DocSidebar/index.js","mtime":1593044980321},{"path":"/home/ubuntu/ScummDocs/node_modules/cache-loader/dist/cjs.js","mtime":1593044981332},{"path":"/home/ubuntu/ScummDocs/node_modules/babel-loader/lib/index.js","mtime":1593044981124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}