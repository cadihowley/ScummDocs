{"remainingRequest":"/home/pi/ScummDocs/node_modules/babel-loader/lib/index.js??ref--8-1!/home/pi/ScummDocs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/home/pi/ScummDocs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/home/pi/ScummDocs/docs/advanced/configuration_file.md","dependencies":[{"path":"/home/pi/ScummDocs/docs/advanced/configuration_file.md","mtime":1592012771907},{"path":"/home/pi/ScummDocs/.docusaurus/docusaurus-plugin-content-docs/site-docs-advanced-configuration-file-md-d44.json","mtime":1592018346215},{"path":"/home/pi/ScummDocs/node_modules/cache-loader/dist/cjs.js","mtime":1592005902096},{"path":"/home/pi/ScummDocs/node_modules/babel-loader/lib/index.js","mtime":1592005901366},{"path":"/home/pi/ScummDocs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1592005901016},{"path":"/home/pi/ScummDocs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1592005901026}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}