{"remainingRequest":"/home/pi/ScummDocs/node_modules/babel-loader/lib/index.js??ref--8-1!/home/pi/ScummDocs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/home/pi/ScummDocs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/home/pi/ScummDocs/docs/about/how_does_it_work.md","dependencies":[{"path":"/home/pi/ScummDocs/docs/about/how_does_it_work.md","mtime":1592024350113},{"path":"/home/pi/ScummDocs/.docusaurus/docusaurus-plugin-content-docs/site-docs-about-how-does-it-work-md-b9d.json","mtime":1592091005740},{"path":"/home/pi/ScummDocs/node_modules/cache-loader/dist/cjs.js","mtime":1592005902096},{"path":"/home/pi/ScummDocs/node_modules/babel-loader/lib/index.js","mtime":1592005901366},{"path":"/home/pi/ScummDocs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1592005901016},{"path":"/home/pi/ScummDocs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1592005901026}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL2hvbWUvcGkvU2N1bW1Eb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSIvaG9tZS9waS9TY3VtbURvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IHZhciBmcm9udE1hdHRlcj17aWQ6J2hvd193b3JrJyx0aXRsZTonSG93IGRvZXMgU2N1bW1WTSB3b3JrPycsc2lkZWJhcl9sYWJlbDonSG93IGRvZXMgaXQgd29yaz8nfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsiaWQiOiJhYm91dC9ob3dfd29yayIsInRpdGxlIjoiSG93IGRvZXMgU2N1bW1WTSB3b3JrPyIsImRlc2NyaXB0aW9uIjoiQWxtb3N0IGFsbCBhZHZlbnR1cmUgYW5kIHJvbGUtcGxheWluZyBnYW1lcyBzaGFyZSBzb21lIGNvbW1vbiBmZWF0dXJlcy4gVGhlIG1vc3QgYmFzaWMgb25lcyBhcmUgdGhlIHJlc291cmNlcyB1c2VkLCB3aGljaCBhcmUgaW4gdGhlIGdhbWUncyBkYXRhIGZpbGVzOiIsInNvdXJjZSI6IkBzaXRlL2RvY3MvYWJvdXQvaG93X2RvZXNfaXRfd29yay5tZCIsInBlcm1hbGluayI6Ii9TY3VtbURvY3MvYWJvdXQvaG93X3dvcmsiLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL1NjdW1tRG9jcy9kb2NzL2Fib3V0L2hvd19kb2VzX2l0X3dvcmsubWQiLCJzaWRlYmFyX2xhYmVsIjoiSG93IGRvZXMgaXQgd29yaz8iLCJzaWRlYmFyIjoic29tZVNpZGViYXIiLCJwcmV2aW91cyI6eyJ0aXRsZSI6IldoYXQgaXMgU2N1bW1WTT8iLCJwZXJtYWxpbmsiOiIvU2N1bW1Eb2NzL2Fib3V0L2Fib3V0In0sIm5leHQiOnsidGl0bGUiOiJTdXBwb3J0ZWQgZ2FtZXMiLCJwZXJtYWxpbmsiOiIvU2N1bW1Eb2NzL2Fib3V0L3N1cHBvcnRlZF9nYW1lcyJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCB2YXIgcmlnaHRUb2M9W3t2YWx1ZTonVGhlIFNjcmlwdGluZyBMYW5ndWFnZSBvZiBhIEdhbWUnLGlkOid0aGUtc2NyaXB0aW5nLWxhbmd1YWdlLW9mLWEtZ2FtZScsY2hpbGRyZW46W119LHt2YWx1ZTonV2hlcmUgZG9lcyBTY3VtbVZNIGZpdCBpbj8nLGlkOid3aGVyZS1kb2VzLXNjdW1tdm0tZml0LWluJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidBZHZhbnRhZ2VzJyxpZDonYWR2YW50YWdlcycsY2hpbGRyZW46W119LHt2YWx1ZTonRGlzYWR2YW50YWdlcycsaWQ6J2Rpc2FkdmFudGFnZXMnLGNoaWxkcmVuOltdfV07dmFyIG1ha2VTaG9ydGNvZGU9ZnVuY3Rpb24gbWFrZVNob3J0Y29kZShuYW1lKXtyZXR1cm4gZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307fTt2YXIgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jOnJpZ2h0VG9jfTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsIkFsbW9zdCBhbGwgYWR2ZW50dXJlIGFuZCByb2xlLXBsYXlpbmcgZ2FtZXMgc2hhcmUgc29tZSBjb21tb24gZmVhdHVyZXMuIFRoZSBtb3N0IGJhc2ljIG9uZXMgYXJlIHRoZSByZXNvdXJjZXMgdXNlZCwgd2hpY2ggYXJlIGluIHRoZSBnYW1lJ3MgZGF0YSBmaWxlczoiKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJHcmFwaGljcyIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJBY3RvcnMgKHRoZSBzcHJpdGVzIGluIHRoZSBnYW1lKSIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJCYWNrZ3JvdW5kIGltYWdlcyIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJGb250cyIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJJbi1nYW1lIGFuaW1hdGlvbnMiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiT2JqZWN0cyIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJWaWRlb3MiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiU291bmQiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiU3ludGhlc2l6ZWQgbXVzaWMgKGUuZy4gTUlESSkiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiU291bmQgZWZmZWN0cyIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJWb2ljZXMiKSksbWR4KCJwIixudWxsLCJBcGFydCBmcm9tIHRoZSByZXNvdXJjZXMgdGhlbXNlbHZlcywgYWxtb3N0IGFsbCBnYW1lcyBoYXZlIHRoZWlyIG93biBzY3JpcHRpbmcgbGFuZ3VhZ2UuIFRoaXMgc2ltcGxpZmllcyB0aGluZ3MgaW4gdGhlIHdob2xlIGRldmVsb3BtZW50IHByb2Nlc3MgYXMgaXQncyB0aGVuIGVhc2llciB0byBhc3NpZ24gdGFza3MgdG8gc3BlY2lmaWMgcGVvcGxlOiBQcm9ncmFtbWVycyBkZWFsIHdpdGggdGhlIGNvZGUgaXRzZWxmOyBnYW1lIGRlc2lnbmVycyBkZWFsIHdpdGggd3JpdGluZyBzY3JpcHRzIHVzaW5nIHRoZSBsYW5ndWFnZSB0aGF0IHRoZSBnYW1lIGludGVycHJldGVyIHVuZGVyc3RhbmRzOyBncmFwaGljcyBkZXNpZ25lcnMgZGVhbCB3aXRoIHRoZSBhcnRpc3RpYyBwYXJ0IG9mIHRoZSBnYW1lOyBtdXNpYyBjb21wb3NlcnMgd2l0aCB0aGUgYXVkaW8sIGFuZCBzbyBvbi4gIiksbWR4KCJwIixudWxsLCJBbHRob3VnaCB0aGUgYmFzaWMgZWxlbWVudHMgb2YgZWFjaCBnYW1lIGFyZSBzdGFuZGFyZCwgZWFjaCBnYW1lIGltcGxlbWVudHMgdGhlbSBpbiBhIHZlcnkgZGlmZmVyZW50IG1hbm5lci4gVGhlIG1vc3QgaW1wb3J0YW50IGFzcGVjdCBvZiByb2xlLXBsYXlpbmcgYW5kIGFkdmVudHVyZSBnYW1lcyBpcyB0aGUgd2F5IHRoZXkgd29yayBiZWhpbmQgdGhlIHNjZW5lcy4gVGhpcyBpbmNsdWRlcyB0aGUga2luZCBvZiBsb2dpYyB1c2VkIGFuZCBob3cgdGhpcyBpcyBpbXBsZW1lbnRlZCBpbiBlYWNoIGdhbWUsIGFuZCB0aGUga2luZCBvZiBpbnRlcmFjdGlvbiBleHBlY3RlZCBmcm9tIHRoZSB1c2VyLiBGb3IgaW5zdGFuY2UsIHNvbWUgZ2FtZXMgYWxsb3cgdGhlIHBsYXllciB0byB1c2UgdmVyYnMgb24gb2JqZWN0cyAoZm9yIGV4YW1wbGUsIHVzZSBvYmplY3QgMSB3aXRoIG9iamVjdCAyKSB3aGVyZWFzIG90aGVyIGdhbWVzIGp1c3QgYWxsb3cgdGhlIHBsYXllciB0byBzaW5nbGUgY2xpY2sgb24gb2JqZWN0cy4gIiksbWR4KCJwIixudWxsLCJUaGUgcmVzb3VyY2VzIHRoZW1zZWx2ZXMgYXJlIG5vdCB1c2VmdWwgYXQgYWxsIHdpdGhvdXQgdGhlIGdhbWUgbG9naWMsIHdoaWNoIGlzIHRoZSBtb3N0IGRpZmZpY3VsdCBwYXJ0IHRvIGltcGxlbWVudCBpbiBhIGdhbWUuIEluIGZhY3QsIHRoZXJlIGFyZSBtYW55IHJlc291cmNlIHZpZXdlcnMgd2hpY2ggY2FuIGJlIHVzZWQgdG8gdmlldyByZXNvdXJjZXMgZnJvbSBhIGxhcmdlIG51bWJlciBvZiBkaWZmZXJlbnQgZ2FtZXMsIGJ1dCB0aGV5IGRvbid0IGRlYWwgd2l0aCB0aGUgbG9naWMgYmVoaW5kIHRob3NlIHJlc291cmNlcy4gIiksbWR4KCJoMyIseyJpZCI6InRoZS1zY3JpcHRpbmctbGFuZ3VhZ2Utb2YtYS1nYW1lIn0sIlRoZSBTY3JpcHRpbmcgTGFuZ3VhZ2Ugb2YgYSBHYW1lIiksbWR4KCJwIixudWxsLCJFYWNoIGdhbWUgdXNlcyBpdHMgb3duIHNjcmlwdGluZyBsYW5ndWFnZSwgd2hpY2ggaXMgdXN1YWxseSBjb250YWluZWQgaW4gdGhlIGdhbWUncyBkYXRhIGZpbGVzLiBUaGlzIGlzIHVzdWFsbHkgaGlnaC1sZXZlbCwgYW5kIHRoZSBnYW1lJ3MgaW50ZXJwcmV0ZXIgaXRzZWxmICh0aGUgZ2FtZSdzIGV4ZWN1dGFibGUgZmlsZSkgaXMgcmVzcG9uc2libGUgZm9yIHBhcnNpbmcgdGhlIHNjcmlwdCBjb21tYW5kcyBmcm9tIHRoZSBnYW1lJ3MgbG9naWMgc2NyaXB0cyBhbmQgZG9pbmcgYWxsIHRoZSBhY3R1YWwgd29yay4iKSxtZHgoInAiLG51bGwsIkhlcmUgaXMgYW4gZXhhbXBsZSBzY3JpcHQgb2YgYSBoeXBvdGhldGljYWwgZW5naW5lLCB3aGVyZSB0aGUgZ2FtZSBsb2FkcyBhIHNjZW5lLCBhbmQgdGhlbiBoYW5kbGVzIGEgY2FzZSB3aGVyZSB0aGUgcGxheWVyIHBpY2tzIHVwIGl0ZW0gQToiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7fSksInN0YXJ0U2NlbmUoMSlcbmxvYWRfYWN0b3JzKClcbnB1dF9hY3RvcihhY3Rvcl9udW1iZXIsIFgsIFkpXG4uLi5cbnB1dF9vYmplY3Qob2JqZWN0X251bWJlciwgWCwgWSlcbi4uLlxuaWYgKGFjdGlvbl9waWNrdXApIHtcbiAgaWYgKG9iamVjdF90b19waWNrdXAoKSA9PSBvYmplY3RfQSkge1xuICAgIGFjdG9yX3dhbGsoWCxZKVxuICAgIGFjdG9yX2RvX2FjdGlvbihhY3Rpb25fbnVtYmVyKVxuICAgIHB1dF9vYmplY3RfaW5faW52ZW50b3J5KG9iamVjdF9BKVxuICAgIHJlbW92ZV9vYmplY3RfZnJvbV9zY2VuZShvYmplY3RfQSlcbiAgfVxufVxuICBcbndoaWxlIChzY2VuZV9ub3RfZW5kZWQpIHtcbiAgaGFuZGxlX2FjdG9yX2FjdGlvbnMoKVxufVxuZW5kU2NlbmUoKVxuIikpLG1keCgicCIsbnVsbCwiRWFjaCBlbmdpbmUgdGVuZHMgdG8gZXhlY3V0ZSB0aGVzZSBzY3JpcHRzIGluIGEgZGlmZmVyZW50IHdheS4gU29tZSBlbmdpbmVzIGhhdmUgc2NyaXB0cyBmb3IgZWFjaCBvYmplY3QsIHdoaWxlIG90aGVycyBtaWdodCBoYXZlIGEgZ2VuZXJhbCBzY3JpcHQgdG8gZG8gZXZlcnl0aGluZywgYW5kIHNvIG9uLiAiKSxtZHgoInAiLG51bGwsIkEgZ2FtZSBzY3JpcHQgY2FuIGNvbnRhaW4gYmFzaWMgZWxlbWVudHMgb2YgdGhlIGdhbWUncyBsb2dpYyBzdWNoIGFzICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJpZiIpLCIgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImVsc2UiKSwiLGFuZCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZ290byIpLCIuIEl0IG1heSBhbHNvIGNhbGwgZnVuY3Rpb25zIGRpcmVjdGx5IGZyb20gdGhlIGV4ZWN1dGFibGUgaXRzZWxmLiBUaGVzZSBhcmUgY2FsbGVkIHNjcmlwdCBvcGNvZGVzLiIpLG1keCgiaDMiLHsiaWQiOiJ3aGVyZS1kb2VzLXNjdW1tdm0tZml0LWluIn0sIldoZXJlIGRvZXMgU2N1bW1WTSBmaXQgaW4/IiksbWR4KCJwIixudWxsLCJTY3VtbVZNIGlzIGEgcHJvamVjdCBpbiB3aGljaCB0aGUgb3JpZ2luYWwgZXhlY3V0YWJsZSBmaWxlIG9mIGEgZ2l2ZW4gZ2FtZSBpcyByZXdyaXR0ZW4gaW4gQysrLCBiYXNlZCBvbiB0aGUgZ2FtZSdzIG9yaWdpbmFsIHNvdXJjZSBjb2RlIG9yIGJ5IHVzaW5nIHJldmVyc2UgZW5naW5lZXJpbmcgdGVjaG5pcXVlcyB0byBzZWUgdGhlIGNvZGUgdGhhdCBpcyBjb250YWluZWQgaW4gdGhlIGdhbWUncyBleGVjdXRhYmxlIGZpbGUuIFNjdW1tVk0ncyBleGVjdXRhYmxlIGZpbGUgY2FuIHRoZW4gYmUgdXNlZCB0byByZXBsYWNlIHRoZSBnYW1lJ3Mgb3JpZ2luYWwgb25lLCBidXQgb2YgY291cnNlIHRoZSBnYW1lJ3MgZGF0YSBmaWxlcyAoZ3JhcGhpY3MsIGF1ZGlvLCBnYW1lIHNjcmlwdHMgYW5kIHNvIG9uKSBhcmUgbmVlZGVkIHRvIHBsYXkgdGhlIGdhbWUgaXRzZWxmLiBUaGVyZWZvcmUsIFNjdW1tVk0gaXMgTk9UIGFuIGVtdWxhdG9yIG9mIGEgc3BlY2lmaWMgb3BlcmF0aW5nIHN5c3RlbS4iKSxtZHgoImgzIix7ImlkIjoiYWR2YW50YWdlcyJ9LCJBZHZhbnRhZ2VzIiksbWR4KCJwIixudWxsLCJTaW5jZSBlYWNoIGdhbWUncyBlbmdpbmUgaXMgZnVsbHkgcmV3cml0dGVuLCB0aGlzIGhhcyBzZXZlcmFsIGFkdmFudGFnZXM6IiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiVGhlIGdhbWUgY2FuIHJ1biBvbiBtYW55IGRpZmZlcmVudCBwbGF0Zm9ybXMsIHRoYW5rcyB0byBTY3VtbVZNJ3MgcG9ydGFibGUgcGxhdGZvcm0gYmFja2VuZC4iKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiR2FtZSBncmFwaGljcyBjYW4gYmUgaW1wcm92ZWQgd2l0aCB0aGUgdXNlIG9mIHNldmVyYWwgZ3JhcGhpY3MgZmlsdGVycyAoaW5jbHVkaW5nIHN1cGVyMnhzYWksIHN1cGVyZWFnbGUsIGFkdm1hbWUyeCwgYWR2bWFtZTN4LCBocTJ4LCBocTN4IGFuZCBtb3JlKSIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJTb21lIGJ1Z3Mgd2hpY2ggZXhpc3RlZCBpbiB0aGUgb3JpZ2luYWwgZ2FtZSdzIGV4ZWN1dGFibGUsIG9yIGluIHNwZWNpZmljIHNjcmlwdHMsIGNhbiBiZSBmaXhlZC4iKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiSXQncyBwb3NzaWJsZSB0byByZS1lbmNvZGUgdGhlIGdhbWUncyBhdWRpbyBmaWxlcyBpbnRvIHBvcHVsYXIgZm9ybWF0cywgc3VjaCBhcyBNUDMsIE9HRyBvciBGTEFDIHNvIHRoYXQgdGhlIGdhbWUgaXRzZWxmIHRha2VzIHVwIG11Y2ggbGVzcyBzcGFjZS4iKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiTHVjYXNBcnRzIGdhbWVzIGhhdmUgYW4gaW1wcm92ZWQgbWVudSBhbmQgc2F2ZWdhbWUgc3lzdGVtLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJNb3N0IFNjdW1tVk0gZ2FtZSBlbmdpbmVzIGFsbG93IHRoZSBwbGF5ZXIgdG8gdXNlIG1vcmUgc2F2ZSBnYW1lIHNsb3RzIHRoYW4gdGhlIG9yaWdpbmFsIGludGVycHJldGVycyBkaWQuIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkluIHNvbWUgZ2FtZXMsIFNjdW1tVk0gb2ZmZXJzIGFkZGVkIGZ1bmN0aW9uYWxpdHkgd2hpY2ggZGlkIG5vdCBleGlzdCBpbiB0aGUgb3JpZ2luYWwgZ2FtZXMuIEZvciBleGFtcGxlLCBpdCBvZmZlcnMgZnVsbCBtb3VzZSBmdW5jdGlvbmFsaXR5IGluIG9sZGVyIFNpZXJyYSBBR0kgZ2FtZXMsIHdoaWNoIGhhZCBubyBtb3VzZSBzdXBwb3J0LiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJJdCdzIHBvc3NpYmxlIHRvIGxpc3RlbiB0byBhIHN1cHBvcnRlZCBnYW1lJ3MgTVQtMzIgbXVzaWMgc2NvcmUgd2l0aG91dCBhbiBhY3R1YWwgTVQtMzIgZXh0ZXJuYWwgTUlESSBzeW50aGVzaXplciBtb2R1bGUsIHRocm91Z2ggYSBzb3BoaXN0aWNhdGVkIGVtdWxhdGlvbiBzeXN0ZW0uIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIlNjdW1tVk0gdXNlcyBmZXdlciBzeXN0ZW0gcmVzb3VyY2VzIHRoYW4gYW4gZW11bGF0b3IsIGFzIGdhbWVzIHJ1biBkaXJlY3RseSBpbiBTY3VtbVZNIGFuZCBub3QgdGhyb3VnaCBhbiBlbXVsYXRlZCBwbGF0Zm9ybS4iKSksbWR4KCJoMyIseyJpZCI6ImRpc2FkdmFudGFnZXMifSwiRGlzYWR2YW50YWdlcyIpLG1keCgicCIsbnVsbCwiQXMgZWFjaCBnYW1lIGVuZ2luZSBpcyBmdWxseSByZXdyaXR0ZW4sIGFuZCBpdCBpcyBpbXBvc3NpYmxlIHRvIGNoZWNrIGV2ZXJ5IGZhY2V0IG9mIGV2ZXJ5IGdhbWUsIHRoZXJlIG1pZ2h0IGJlIHNvbWUgYnVncyB0aGF0IHdlcmUgbm90IHByZXNlbnQgd2l0aCB0aGUgb3JpZ2luYWwgZ2FtZSBpbnRlcnByZXRlci4iKSxtZHgoInAiLG51bGwsIlRoZSBTY3VtbVZNIGJ1ZyB0cmFja2VyIHByb3ZpZGVzIGEgd2F5IGZvciB1c2VycyB0byBzdWJtaXQgYW55IGJ1Z3MgdGhleSBmaW5kIHRvIHRoZSBTY3VtbVZNIGRldmVsb3BtZW50IHRlYW0gZm9yIHJlY3RpZmljYXRpb24uIiksbWR4KCJwIixudWxsLCJGb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBidWcgdHJhY2tpbmcgYW5kIHJlcG9ydGluZywgc2VlIHRoZSAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2J1Z3Muc2N1bW12bS5vcmcifSksIklzc3VlIFRyYWNrZXIiKSwiIHBhZ2Ugb24gdGhlIFNjdW1tVk0gd2Vic2l0ZS4gIikpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}